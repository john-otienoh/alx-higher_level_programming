Using the 0-add_integer.py
This is the '0-add_integer' module.
The 0-add_integer module supplies one function, add_integer().
The ``add_integer(...)``` returns the addition of its two arguments(numbers), which is equivalent using the '+' operator.

>>> add_integer(2, 3)
5
>>> add_integer(2, -3)
-1
>>> add_integer(-2, -3)
-5
>>> add_integer(-2, 3)
1
>>> add_integer(2.0, 3.0)
5
>>> add_integer(2.9, 2.1)
4
>>> add_integer(2.6, 1)
3
Non-Numbers
===========

``add_integer()`` expects that both arguments are either integers or floats.
If either argument is a non-integer and non-float, a TypeError is raised:
>>> add_integer("hello", 3)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(2, "hello")
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer(None)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(2.3, None)
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer("hello", "there")
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(float('nan'))
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer

>>> add_integer(2, float('nan'))
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer
